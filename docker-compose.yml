version: "3.9"
services:
  web:
    build:
      context: .
      args:
          - NODE_ENV=local
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "8181:443"
    depends_on:
      - "postgres"
    networks:
      - springboot-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - ElasticApm:ServerUrl=http://host.docker.internal:8200
      - ElasticConfiguration:Uri=http://host.docker.internal:9200
      - ConnectionStrings:StringBoot=Server=host.docker.internal;Port=5433;Database=springboot;User Id=postgres;Password=postgress;
  
  worker-general:
    build:
      context: .
      args:
        - NODE_ENV=local
      dockerfile: Dockerfile_Worker_General
    depends_on:
      - "postgres"
    networks:
      - springboot-network
    environment:
      - ElasticApm:ServerUrl=http://host.docker.internal:8200
      - ElasticConfiguration:Uri=http://host.docker.internal:9200
      
  admin:
    build:
      context: .
      args:
        - NODE_ENV=local
      dockerfile: Dockerfile_Admin
    ports:
      - "9090:80"
      - "9191:443"
    depends_on:
      - "postgres"
    networks:
      - springboot-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - ElasticApm:ServerUrl=http://host.docker.internal:8200
      - ElasticConfiguration:Uri=http://host.docker.internal:9200
    
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgress
      - POSTGRES_DB=postgres
    ports:
      - "5434:5432"
    volumes:
      - /Users/ettienemare/Documents/Development/postgres/springboot:/var/lib/postgresql/data
    networks:
      - springboot-network
        
networks:
  springboot-network:
    driver: bridge