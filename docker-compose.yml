version: "3.9"
services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgress
      - POSTGRES_DB=springboot
    ports:
      - "5434:5432"
    volumes:
      - /Users/ettienemare/Documents/Development/postgres/springboot:/var/lib/postgresql/data
    networks:
      - springboot-network
      
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    networks:
      - springboot-network
    volumes:
      - cache:/data
  
  web:
    build:
      context: .
      args:
        - NODE_ENV=local
        - ASPNETCORE_ENVIRONMENT=Release
      dockerfile: Dockerfile_Web
    ports:
      - "7070:80"
      - "7171:443"
    depends_on:
      - "api"
      - "admin"
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      ASPNETCORE_ENVIRONMENT: Release
    networks:
      - springboot-network 
    
  api:
    build:
      context: .
      args:
          - NODE_ENV=local
          - ASPNETCORE_ENVIRONMENT=Release
      dockerfile: Dockerfile_Api
    ports:
      - "8080:80"
      - "8181:443"
    depends_on:
      - "postgres"
      - "cache"
    links:
      - postgres
      - cache
    networks:
      - springboot-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - ElasticApm:ServerUrl=http://host.docker.internal:8200
      - ElasticConfiguration:Uri=http://host.docker.internal:9200
      - ConnectionStrings:StringBoot=Host=postgres;Username=postgres;Password=postgress;Database=springboot;Pooling=true;
      - ConnectionStrings:Redis=cache:6379,password=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      
  worker-general:
    build:
      context: .
      args:
        - NODE_ENV=local
        - ASPNETCORE_ENVIRONMENT=Release
      dockerfile: Dockerfile_Worker_General
    links:
      - postgres
      - cache
    depends_on:
      - postgres
      - cache
    networks:
      - springboot-network
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - ElasticApm:ServerUrl=http://host.docker.internal:8200
      - ElasticConfiguration:Uri=http://host.docker.internal:9200
      - ConnectionStrings:StringBoot=Host=postgres;Username=postgres;Password=postgress;Database=springboot;Pooling=true;
      - ConnectionStrings:Redis=cache:6379,password=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      
  admin:
    build:
      context: .
      args:
        - NODE_ENV=local
        - ASPNETCORE_ENVIRONMENT=Release
      dockerfile: Dockerfile_Admin
    ports:
      - "9090:80"
      - "9191:443"
    depends_on:
      - postgres
      - cache
    networks:
      - springboot-network
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - ElasticApm:ServerUrl=http://host.docker.internal:8200
      - ElasticConfiguration:Uri=http://host.docker.internal:9200    
networks:
  springboot-network:
    driver: bridge
    
volumes:
  cache:
    driver: local